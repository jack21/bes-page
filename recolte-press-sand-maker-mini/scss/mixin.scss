@import 'variables';

@mixin mobile {
  @media screen and (max-width: $media-lg) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: 769px) {
    // $media-lg
    @content;
  }
}

@mixin tablet {
  @media screen and (max-width: 999px) {
    @content;
  }
}

$mixin-default-value: -1000;

@mixin size($width, $height: $width, $width-mobile: $width, $height-mobile: $height) {
  @include width($width, $width-mobile);
  @include height($height, $height-mobile);
}

@mixin width($width, $width-mobile: $width) {
  @include size-prop(width, $width, $width-mobile);
}

@mixin height($height, $height-mobile: $height) {
  @include size-prop(height, $height, $height-mobile);
}

@mixin min-width($width, $width-mobile: $width) {
  @include size-prop(min-width, $width, $width-mobile);
}

@mixin min-height($height, $height-mobile: $height) {
  @include size-prop(min-height, $height, $height-mobile);
}

@mixin font-size($fontSize, $fontSizeMobile: $fontSize) {
  line-height: $lines-line-height;
  font-size: px($fontSize);
  @include mobile {
    font-size: vw($fontSizeMobile);
  }
  //font-size: px-to-em($fontSize);
  //@include mobile {
  //  font-size: px-to-em($fontSizeMobile);
  //}
}

@mixin font20() {
  @include font-size(20);
}

@mixin font18() {
  @include font-size(18);
}

@mixin font16() {
  @include font-size(16);
}

@mixin font14() {
  @include font-size(14);
}

@mixin font12() {
  @include font-size(12);
  line-height: 1.8;
}

@function mixin-default-value($value) {
  @return $value == $mixin-default-value;
}

@function mixin-has-value($value) {
  @return $value != $mixin-default-value and $value != null;
}

@mixin padding(
  $top: $mixin-default-value,
  $right: $mixin-default-value,
  $bottom: $mixin-default-value,
  $left: $mixin-default-value
) {
  $match: false;

  // 一個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-default-value($right) and
      mixin-default-value($bottom) and
      mixin-default-value($left)
  ) {
    padding-top: px($top);
    padding-right: px($top);
    padding-bottom: px($top);
    padding-left: px($top);
    @include mobile {
      padding-top: vw($top);
      padding-right: vw($top);
      padding-bottom: vw($top);
      padding-left: vw($top);
    }
    //border: 1px;
    $match: true;
  }

  // 兩個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-default-value($bottom) and
      mixin-default-value($left)
  ) {
    padding-top: px($top);
    padding-right: px($right);
    padding-bottom: px($top);
    padding-left: px($right);
    @include mobile {
      padding-top: vw($top);
      padding-right: vw($right);
      padding-bottom: vw($top);
      padding-left: vw($right);
    }
    //border: 2px;
    $match: true;
  }

  // 三個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-has-value($bottom) and
      mixin-default-value($left)
  ) {
    padding-top: px($top);
    padding-right: px($right);
    padding-bottom: px($bottom);
    padding-left: px($right);
    @include mobile {
      padding-top: vw($top);
      padding-right: vw($right);
      padding-bottom: vw($bottom);
      padding-left: vw($right);
    }
    //step: 3;
    $match: true;
  }

  // 四個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-has-value($bottom) and
      mixin-has-value($left)
  ) {
    padding-top: px($top);
    padding-right: px($right);
    padding-bottom: px($bottom);
    padding-left: px($left);
    @include mobile {
      padding-top: vw($top);
      padding-right: vw($right);
      padding-bottom: vw($bottom);
      padding-left: vw($left);
    }
    $match: true;
  }

  // 上、下、左、右 隨便定義
  @if (not($match)) {
    @if ($top) {
      padding-top: px($top);
      @include mobile {
        padding-top: vw($top);
      }
    }
    @if ($right) {
      padding-right: px($right);
      @include mobile {
        padding-right: vw($right);
      }
    }
    @if ($bottom) {
      padding-bottom: px($bottom);
      @include mobile {
        padding-bottom: vw($bottom);
      }
    }
    @if ($left) {
      padding-left: px($left);
      @include mobile {
        padding-left: vw($left);
      }
    }
  }
}

@mixin padding-top($padding, $padding-mobile: $padding) {
  @include size-prop(padding-top, $padding, $padding-mobile);
}

@mixin padding-right($padding, $padding-mobile: $padding) {
  @include size-prop(padding-right, $padding, $padding-mobile);
}

@mixin padding-bottom($padding, $padding-mobile: $padding) {
  @include size-prop(padding-bottom, $padding, $padding-mobile);
}

@mixin padding-left($padding, $padding-mobile: $padding) {
  @include size-prop(padding-left, $padding, $padding-mobile);
}

@mixin padding-x($padding, $padding-mobile: $padding) {
  @include padding-left($padding, $padding-mobile);
  @include padding-right($padding, $padding-mobile);
}

@mixin padding-y($padding, $padding-mobile: $padding) {
  @include padding-top($padding, $padding-mobile);
  @include padding-bottom($padding, $padding-mobile);
}

@mixin margin(
  $top: $mixin-default-value,
  $right: $mixin-default-value,
  $bottom: $mixin-default-value,
  $left: $mixin-default-value
) {
  $match: false;

  // 一個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-default-value($right) and
      mixin-default-value($bottom) and
      mixin-default-value($left)
  ) {
    margin-top: px($top);
    margin-right: px($top);
    margin-bottom: px($top);
    margin-left: px($top);
    @include mobile {
      margin-top: vw($top);
      margin-right: vw($top);
      margin-bottom: vw($top);
      margin-left: vw($top);
    }
    $match: true;
  }

  // 兩個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-default-value($bottom) and
      mixin-default-value($left)
  ) {
    margin-top: px($top);
    margin-right: px($right);
    margin-bottom: px($top);
    margin-left: px($right);
    @include mobile {
      margin-top: vw($top);
      margin-right: vw($right);
      margin-bottom: vw($top);
      margin-left: vw($right);
    }
    $match: true;
  }

  // 三個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-has-value($bottom) and
      mixin-default-value($left)
  ) {
    margin-top: px($top);
    margin-right: px($right);
    margin-bottom: px($bottom);
    margin-left: px($right);
    @include mobile {
      margin-top: vw($top);
      margin-right: vw($right);
      margin-bottom: vw($bottom);
      margin-left: vw($right);
    }
    $match: true;
  }

  // 四個參數
  @if (
    not($match) and
      mixin-has-value($top) and
      mixin-has-value($right) and
      mixin-has-value($bottom) and
      mixin-has-value($left)
  ) {
    margin: px($top) px($right) px($bottom) px($left);
    @include mobile {
      margin: vw($top) vw($right) vw($bottom) vw($left);
    }
    $match: true;
  }

  // 上、下、左、右 隨便定義
  @if (not($match)) {
    @if ($top) {
      margin-top: px($top);
      @include mobile {
        margin-top: vw($top);
      }
    }
    @if ($right) {
      margin-right: px($right);
      @include mobile {
        margin-right: vw($right);
      }
    }
    @if ($bottom) {
      margin-bottom: px($bottom);
      @include mobile {
        margin-bottom: vw($bottom);
      }
    }
    @if ($left) {
      margin-left: px($left);
      @include mobile {
        margin-left: vw($left);
      }
    }
  }
}

@mixin margin-top($margin, $margin-mobile: $margin) {
  @include size-prop(margin-top, $margin, $margin-mobile);
}

@mixin margin-right($margin, $margin-mobile: $margin) {
  @include size-prop(margin-right, $margin, $margin-mobile);
}

@mixin margin-bottom($margin, $margin-mobile: $margin) {
  @include size-prop(margin-bottom, $margin, $margin-mobile);
}

@mixin margin-left($margin, $margin-mobile: $margin) {
  @include size-prop(margin-left, $margin, $margin-mobile);
}

@mixin margin-x($margin, $margin-mobile: $margin) {
  @include margin-left($margin, $margin-mobile);
  @include margin-right($margin, $margin-mobile);
}

@mixin margin-y($margin, $margin-mobile: $margin) {
  @include margin-top($margin, $margin-mobile);
  @include margin-bottom($margin, $margin-mobile);
}

@mixin top($value, $value-mobile: $value) {
  @include size-prop(top, $value, $value-mobile);
}

@mixin bottom($value, $value-mobile: $value) {
  @include size-prop(bottom, $value, $value-mobile);
}

@mixin left($value, $value-mobile: $value) {
  @include size-prop(left, $value, $value-mobile);
}

@mixin right($value, $value-mobile: $value) {
  @include size-prop(right, $value, $value-mobile);
}

//@mixin translateX($value, $value-mobile: $value) {
//  @include size-prop(transform, $value, $value-mobile);
//}

// 不用充滿指定的行數
@mixin lines($lineCount: 1, $fontSize: 16px, $lineCountMobile: $lineCount, $fontSizeMobile: $fontSize) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  line-height: $lines-line-height;
  -webkit-line-clamp: $lineCount;
  font-size: px($fontSize);
  min-height: px($fontSize * 1 * $lines-line-height);
  max-height: px($fontSize * $lineCount * $lines-line-height);

  @include mobile {
    -webkit-line-clamp: $lineCountMobile;
    font-size: vw($fontSizeMobile);
    min-height: vw($fontSizeMobile * 1 * $lines-line-height);
    max-height: vw($fontSizeMobile * $lineCountMobile * $lines-line-height);
  }
}

// 即使不到指定的行數，也要撐滿行數
@mixin lines-fix($lineCount: 1, $fontSize: 16px, $lineCountMobile: $lineCount, $fontSizeMobile: $fontSize) {
  @include lines($lineCount, $fontSize, $lineCountMobile, $fontSizeMobile);
  min-height: px($fontSize * $lineCount * $lines-line-height);
  @include mobile {
    min-height: vw($fontSizeMobile * $lineCountMobile * $lines-line-height);
  }
}

@mixin radius(
  $radius-top-left,
  $radius-top-right: $radius-top-left,
  $radius-bottom-right: $radius-top-left,
  $radius-bottom-left: $radius-top-left
) {
  border-radius: px($radius-top-left) px($radius-top-right) px($radius-bottom-right) px($radius-bottom-left);
  @include mobile {
    border-radius: vw($radius-top-left) vw($radius-top-right) vw($radius-bottom-right) vw($radius-bottom-left);
  }
}

@mixin expand-touch-zoom() {
  @include padding($touch-zoom-y, $touch-zoom-x);
  @include margin(-$touch-zoom-y, -$touch-zoom-x);
}

@mixin hide-scrollbar {
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;

  &::-webkit-scrollbar {
    height: 0;
  }
}

@mixin show-scrollbar {
  &::-webkit-scrollbar {
    -webkit-appearance: none;
  }

  &::-webkit-scrollbar:vertical {
    width: 11px;
  }

  &::-webkit-scrollbar:horizontal {
    height: 11px;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 8px;
    border: 2px solid white; /* should match background, can't be transparent */
    background-color: $gray-aaa;
  }
}

@mixin loading-animation-bar {
  //transition: bottom 300ms 300ms cubic-bezier(0.0, 0.0, 1.0, 1.0), transform 300ms cubic-bezier(0.0, 0.0, 1.0, 1.0);
  //animation-duration: 2s;
  //animation-fill-mode: forwards;
  //animation-iteration-count: infinite;
  //animation-name: placeholder-shimmer;
  //animation-timing-function: linear;
  //background: linear-gradient(to right, #eeeeee 0%, $gray-light 50%, #eeeeee 100%);
  background: $gray-f5f5f5 linear-gradient(to right, $gray-f5f5f5 5%, #eee 20%, $gray-f5f5f5 35%);
  animation: placeholder-shimmer 5s linear 0s infinite normal forwards;
}

@mixin rotate-animation {
  transition: transform 400ms;
  animation-iteration-count: 1;
  animation-duration: 0.2s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

@mixin center($width) {
  width: px($width);
  margin-left: auto;
  margin-right: auto;
  @include mobile {
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

@mixin hover {
  @include desktop {
    &:hover {
      @content;
    }
  }
}

// 三角形
@mixin triangle($color) {
  &:after {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 0);
    content: '';
    width: 0;
    height: 0;
    transition: all 180ms ease-in-out;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 8px solid $color;
    @include mobile {
      border-left: vw(8) solid transparent;
      border-right: vw(8) solid transparent;
      border-bottom: vw(8) solid $color;
    }
  }
}

@mixin triangle2() {
  &:after {
    --color: #{$gray-3c};
    --size: 8px;
    @include mobile {
      --size: vw(8);
    }
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 0);
    content: '';
    width: 0;
    height: 0;
    transition: all 180ms ease-in-out;
    border-left: var(--size) solid transparent;
    border-right: var(--size) solid transparent;
    border-bottom: var(--size) solid var(--color);
  }
}

@mixin triangle-down() {
  @include triangle2;
  &:after {
    border-top: var(--size) solid var(--color);
    border-bottom: unset;
    bottom: calc(0px - var(--size));
  }
}

@mixin scrollbar {
  &::-webkit-scrollbar {
    -webkit-appearance: none;
  }

  &::-webkit-scrollbar:vertical {
    width: 10px;
    @include mobile {
      width: vw(10);
    }
  }

  &::-webkit-scrollbar:horizontal {
    height: 10px;
    @include mobile {
      height: vw(10);
    }
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
    border: 2px solid #ffffff;
  }

  &::-webkit-scrollbar-track {
    border-radius: 10px;
    background-color: #ffffff;
  }
}

@mixin size-prop($name, $size, $size-mobile: $size) {
  @if ($size) {
    @if (is-number($size)) {
      @if (unitless($size)) {
        #{$name}: px($size); // 只有數字
      } @else {
        #{$name}: $size; // 數字帶單位
      }
    } @else {
      #{$name}: $size; // 非數字，直接用
    }
  }
  @if ($size-mobile) {
    @include mobile {
      @if (is-number($size-mobile)) {
        @if (unitless($size-mobile)) {
          #{$name}: vw($size-mobile); // 只有數字
        } @else if (is-px($size-mobile)) {
          #{$name}: vw($size-mobile); // px，轉成 vw
        } @else {
          #{$name}: $size-mobile; // 數字帶單位
        }
      } @else {
        #{$name}: $size-mobile; // 非數字，直接用
      }
      //@if (is-percentage($size-mobile)) {
      //  #{$name}: $size-mobile;
      //} @else if (is-vw($size-mobile)) {
      //  #{$name}: $size-mobile;
      //} @else if (is-rem($size-mobile)) {
      //  #{$name}: $size-mobile;
      //} @else {
      //  #{$name}: vw($size-mobile);
      //}
    }
  }
}

@mixin editor {
  @include font16;
  word-break: break-all;
  line-height: 1.88;
  letter-spacing: 1.6px;

  .ProseMirror-focused {
    border: 0;
    outline: unset;
  }

  img {
    max-width: 100%;
    height: auto;
    @include margin-top($space30);

    &.ProseMirror-selectednode {
      outline: 1px solid var(--primary);
    }
  }

  h2 {
    @include font18;
    font-weight: bold;
    @include margin-top($space50);
  }

  h3 {
    @include font16;
    font-weight: bold;
    @include margin-top($space30);
  }

  blockquote {
    @include margin-top($space25);
    @include padding($space30);
    @include font16;
    background-color: $white;
    border-left: $space5 solid $pink;
    @include mobile {
      border-left: vw($space5) solid $pink;
    }

    &:first-child {
      margin-top: 0;
    }
  }

  div.block {
    background-color: $white;
    @include padding-x($space30);
    @include padding-y($space35);
    @include margin-top($space20);
    @include margin-bottom($space50);
    @include font14;

    a {
      color: $gray-3c;
      transition: color 180ms ease-in-out;
      @include hover {
        color: $cocoa;
      }
    }
  }

  a {
    color: $pink-dark;
    transition: color 180ms ease-in-out;
    @include hover {
      color: $cocoa;
    }
  }

  p {
    margin-bottom: 0;
    @include margin-top($space20);
  }

  .caption {
    @include font14;
    color: $gray-999;
    //@include margin-top($space15);

    p {
      margin-top: 0;
    }
  }

  p + p,
  ul + p,
  ol + p {
    @include margin-top($space20);
  }

  ul {
    list-style-type: disc;
  }

  ol {
    list-style-type: decimal;
  }

  ul,
  ol {
    @include padding-left($space25);

    li {
      @include padding-left(0);
    }

    li + li {
      @include margin-top($space10);
    }
  }

  br.ProseMirror-trailingBreak {
    display: none !important;
  }

  img.ProseMirror-separator {
    display: none !important;
  }

  > :first-child {
    margin-top: 0;
  }
}
